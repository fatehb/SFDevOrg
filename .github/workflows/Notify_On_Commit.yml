
name: Notify On Commit

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo Hello, world!
      
      - name: Get Draft Release Body
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        
        run: |
          echo "draft_body=`gh release view --json body`" >> $GITHUB_ENV
        
        #run: |
        #  draft_body=`gh release view --json body`
        #  echo "::set-env name=draft_body::$draft_body"
        
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: ${{ env.draft_body }}
          SLACK_TITLE: Release Draft
          SLACK_USERNAME: github
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          
#       - name: Send custom JSON data to Slack workflow
#         id: slack
#         uses: slackapi/slack-github-action@v1.21.0
#         with:
#           # This data can be any valid JSON from a previous step in the GitHub Action
#           payload: |
#             {
#               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
#               "blocks": [
#                 {
#                   "type": "section",
#                   "text": {
#                     "type": "mrkdwn",
#                     "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#                   }
#                 }
#               ]
#             }
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#           SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

